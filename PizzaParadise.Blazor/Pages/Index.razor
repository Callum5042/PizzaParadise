@page "/"
@page "/Order"
@page "/Order/{Category}"
@using Microsoft.EntityFrameworkCore
@using PizzaParadise.Entities
@inject IDbContextFactory<PizzaParadiseContext> DbContextFactory

<PageTitle>Order</PageTitle>

<div class="d-flex flex-row justify-content-start">

    <div class="categories-container sticky">
        <CategoryNavbar />
    </div>

    <div class="flex-grow-1 ms-3 me-3">
        @if (products.Any())
        {
            foreach (var product in products)
            {
                <div class="card mb-3" @onclick="(() => AddToBasket(product.Price.GetValueOrDefault()))">
                    <div class="card-body">
                        @product.Price?.ToString("c") - @product.Name
                    </div>
                </div>
            }
        }
        else
        {
            <div>
                There is nothing available to select
            </div>
        }
    </div>

    <div class="sticky">
        <div class="card">
            <div class="card-body">
                Basket
                @CheckoutTotal.ToString("c")
            </div>
        </div>
    </div>

</div>

@code {

    private class ProductDetails
    {
        public string? Name { get; set; }

        public decimal? Price { get; set; }
    }

    private IList<ProductDetails> products = new List<ProductDetails>();

    public decimal CheckoutTotal { get; set; }

    [Parameter]
    public string? Category { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        using var context = DbContextFactory.CreateDbContext();

        var category = Category?.ToLower();

        products = await context.Products
            .Where(x => x.ProductCategory.Name.ToLower() == category)
            .Select(x => new ProductDetails()
            {
                Name = x.Name,
                Price = x.Price
            })
            .ToListAsync();
    }

    private void AddToBasket(decimal price)
    {
        CheckoutTotal += price;
    }
}